library(phytools)
data("liolaemid.data")
data("liolaemid.tree")
head(liolaemid.data)
liolaemid.data<-liolaemid.data[-1,]
parity<-setNames(liolaemid.data$parity_mode,
rownames(liolaemid.data))
temperature<-setNames(liolaemid.data$temperature,
rownames(liolaemid.data))
fit<-fitcontMk(liolaemid.tree,parity,temperature,
parallel=TRUE,ncores=10,levs=20)
fit
fit<-fitcontMk(liolaemid.tree,parity,temperature,
parallel=TRUE,ncores=10,levs=20,trace=2)
getwd()
setwd("../../documents/CV")
20000+29250+80592+1400+1500+3000+8300+2000+3500
ls()
plot(fit)
fit
list.files()
setwd("../../presentations/UConn.2025/")
list.files()
load("liolaemid_results.RData")
ls()
fit
Q<-matrix(c(-1,1,1,-1),2,2,dimnames=list(0:1,0:1))
true_tree<-pbtree(n=40,scale=1)
X<-sim.Mk(tree,Q,nsim=100)
library(phangorn)
Q<-matrix(c(-1,1,1,-1),2,2,dimnames=list(0:1,0:1))
true_tree<-pbtree(n=40,scale=1)
X<-sim.Mk(tree,Q,nsim=100)
X<-sim.Mk(true_tree,Q,nsim=100)
X
Data<-as.phyDat(X,type="USER")
Data<-as.phyDat(X,type="USER",levels=c(0,1))
Data
Data<-as.phyDat(t(X),type="USER",levels=c(0,1))
Data
Data<-as.phyDat(as.matrix(X),type="USER",levels=c(0,1))
Data
Data
fit<-pml_bb(Data)
fit<-pml_bb(Data,model="ER")
fit
plot(fit)
dev.off()
plot(fit)
plotTree(midpoint(fit$tree))
plot(cophylo(true_tree,midpoint(fit$tree)))
library(phangorn)
Q<-matrix(c(-1,1,1,-1),2,2,dimnames=list(0:1,0:1))
true_tree<-pbtree(n=40,scale=1)
X<-sim.Mk(true_tree,Q,nsim=1000)
Data<-as.phyDat(as.matrix(X),type="USER",levels=c(0,1))
Data
fit<-pml_bb(Data,model="ER")
dev.off()
plotTree(midpoint(fit$tree))
plot(cophylo(true_tree,midpoint(fit$tree)))
fit<-pml_bb(Data,model="ER",rearrangement="stochastic")
?fitcontMk
getwd()
setwd("../../")
getwd()
?bmPlot
library(phytools)
?bmPlot
?fitmultiBM
?fitThresh
?bounded_bm
?update.packages
update.packages(ask=FALSE,checkBuilt=TRUE)
update.packages(ask=FALSE,checkBuilt=TRUE)
packageVersion("phytools")
remotes::install_github("liamrevell/phytools")
library(phytools)
library(geiger)
tree<-pbtree(n=100)
Q<-matrix(c(-1,1,1,-1),2,2,dimnames=list(0:1,0:1))
args(fitDiscrete)
fit1<-fitDiscrete(tree,model="ER",transform="lambda")
fit1<-fitDiscrete(tree,x,model="ER",transform="lambda")
library(phytools)
library(geiger)
tree<-pbtree(n=100)
Q<-matrix(c(-1,1,1,-1),2,2,dimnames=list(0:1,0:1))
x<-sim.Mk(tree,Q)
y<-sim.Mk(phytools:::lambdaTree(tree,0),Q)
fit1<-fitDiscrete(tree,x,model="ER",transform="lambda")
fit1
fit2<-fitDiscrete(tree,y,model="ER",transform="lamba")
fit2<-fitDiscrete(tree,y,model="ER",transform="lambda")
fit2
phytools:::lambdaTree(tree,0)
lik<-function(theta,tree,x){
q<-theta[1]
lambda<-theta[2]
Q<-matrix(c(-q,q,q,-q),2,2)
-logLik(fitMk(tree,x,fixedQ=Q))
}
lik(c(1,0),tree,x)
fit<-optim(c(1,1),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(Inf,1))
fit
lik(c(1,0),tree,x)
fit<-optim(c(1,0),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(Inf,1))
fit
fit<-optim(c(1,0),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(Inf,1),
trace=1)
lik<-function(theta,tree,x){
q<-theta[1]
lambda<-theta[2]
Q<-matrix(c(-q,q,q,-q),2,2)
logL<-logLik(fitMk(tree,x,fixedQ=Q))
cat(paste("q = ",q,"; lambda =",lambda,
"; log(L) = ",logL,"\n",sep=""))
-logL
}
lik(c(1,0),tree,x)
lik<-function(theta,tree,x){
q<-theta[1]
lambda<-theta[2]
Q<-matrix(c(-q,q,q,-q),2,2)
logL<-logLik(fitMk(tree,x,fixedQ=Q))
cat(paste("q = ",round(q,4),
"; lambda = ",round(lambda,4),
"; log(L) = ",round(logL,4),"\n",sep=""))
-logL
}
lik(c(1,0),tree,x)
fit<-optim(c(1,0),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(Inf,1))
lik(c(1,0),tree,y)
library(phytools)
library(geiger)
tree<-pbtree(n=200)
Q<-matrix(c(-1,1,1,-1),2,2,dimnames=list(0:1,0:1))
x<-sim.Mk(tree,Q)
y<-sim.Mk(phytools:::lambdaTree(tree,0),Q)
fit1<-fitDiscrete(tree,x,model="ER",transform="lambda")
fit1
fit2<-fitDiscrete(tree,y,model="ER",transform="lambda")
fit2
fit1
fit2
lik<-function(theta,tree,x){
q<-theta[1]
lambda<-theta[2]
Q<-matrix(c(-q,q,q,-q),2,2)
logL<-logLik(fitMk(tree,x,fixedQ=Q))
cat(paste("q = ",round(q,4),
"; lambda = ",round(lambda,4),
"; log(L) = ",round(logL,4),"\n",sep=""))
-logL
}
lik(c(1,0),tree,y)
fit<-optim(c(1,0),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(Inf,1))
library(phytools)
library(geiger)
tree<-pbtree(n=200)
Q<-matrix(c(-1,1,1,-1),2,2,dimnames=list(0:1,0:1))
x<-sim.Mk(tree,Q)
y<-sim.Mk(phytools:::lambdaTree(tree,0.5),Q)
fit1<-fitDiscrete(tree,x,model="ER",transform="lambda")
fit1
fit2<-fitDiscrete(tree,y,model="ER",transform="lambda")
fit2
lik<-function(theta,tree,x){
q<-theta[1]
lambda<-theta[2]
Q<-matrix(c(-q,q,q,-q),2,2)
logL<-logLik(fitMk(tree,x,fixedQ=Q))
cat(paste("q = ",round(q,4),
"; lambda = ",round(lambda,4),
"; log(L) = ",round(logL,4),"\n",sep=""))
-logL
}
lik(c(1,0),tree,y)
fit<-optim(c(1,0),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(Inf,1))
fit<-optim(c(1,runif(1,0,1)),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(Inf,1))
fit<-optim(c(1,runif(1,0,1)),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(Inf,1))
library(phytools)
library(geiger)
tree<-pbtree(n=500)
Q<-matrix(c(-1,1,1,-1),2,2,dimnames=list(0:1,0:1))
x<-sim.Mk(tree,Q)
y<-sim.Mk(phytools:::lambdaTree(tree,0.5),Q)
fit1<-fitDiscrete(tree,x,model="ER",transform="lambda")
fit1
fit2<-fitDiscrete(tree,y,model="ER",transform="lambda")
fit2
lik<-function(theta,tree,x){
q<-theta[1]
lambda<-theta[2]
Q<-matrix(c(-q,q,q,-q),2,2)
logL<-logLik(fitMk(tree,x,fixedQ=Q))
cat(paste("q = ",round(q,4),
"; lambda = ",round(lambda,4),
"; log(L) = ",round(logL,4),"\n",sep=""))
-logL
}
lik(c(1,0),tree,y)
fit<-optim(c(1,runif(1,0,1)),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(Inf,1))
fit<-optim(c(1,runif(1,0,1)),lik,
tree=tree,x=y,
method="L-BFGS-B",
lower=c(1e-8,0),upper=c(10,1))
?optim
fit<-optim(c(1,runif(1,0,1)),lik,
tree=tree,x=y,
method="SANN",
lower=c(1e-8,0),upper=c(10,1))
?logit
?plogis
plogis(0)
plogis(-Inf)
plogis(Inf)
lik<-function(theta,tree,x){
q<-exp(theta[1])
lambda<-plogis(theta[2])
Q<-matrix(c(-q,q,q,-q),2,2)
logL<-logLik(fitMk(tree,x,fixedQ=Q))
cat(paste("q = ",round(q,4),
"; lambda = ",round(lambda,4),
"; log(L) = ",round(logL,4),"\n",sep=""))
-logL
}
lik(c(1,0),tree,y)
fit<-optim(c(log(1),0),lik,
tree=tree,x=y,
method="SANN")
exp(0)
log(1)
fit<-optim(c(log(0.26),0),lik,
tree=tree,x=y,
method="SANN")
getwd()
setwd("courses/Biol634-fall2025")
list.files()
setwd("biol634/")
list.files()
