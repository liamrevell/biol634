lapply(rooted.bs_trees,plotTree)
lapply(rooted.bs_trees,plotTree,fsize=0.5)
lapply(rooted.bs_trees,plotTree,fsize=0.5,lwd=1)
class(rooted.bs_trees)<-"multiPhylo"
rooted.bs_trees
dev.off()
par(mfrow=c(10,10))
plotTree(rooted.bs_trees,fsize=0.6,lwd=1)
class(rooted.bs_trees)<-"multiphylo"
rooted.bs_trees
class(rooted.bs_trees)<-"multiPhylo"
?plotBS
## step4 (optional): use ape::prop.clades to compute BS %
bs<-prop.clades(rooted.nj_tree,rooted.bs_trees,
rooted=TRUE)
bs
plotTree(rooted.nj_tree)
nodelabels()
dev.off()
dev.off()
plotTree(rooted.nj_tree)
nodelabels()
plotTree(rooted.nj_tree)
nodelabels(bs)
nodelabels(bs/100,adj=c(1.2,1.2),cex=0.9,frame="none")
plotTree(rooted.nj_tree)
nodelabels(bs/100,adj=c(1.2,1.2),cex=0.9,frame="none")
rooted.nj_tree$node.label<-bs/100
plotTree(rooted.nj_tree)
nodelabels()
rooted.nj_tree$node.label<-bs/100
plotTree(rooted.nj_tree)
nodelabels()
nodelabels(rooted.nj_tree$node.label)
plotTree(rooted.nj_tree)
nodelabels(bs/100,adj=c(1.2,1.2),cex=0.9,frame="none")
## we could've skipped all this....
plotBS(rooted.nj_tree,rooted.bs_trees)
nsites<-ncol(dna)
foo<-function(X,nsites) X[,sample(1:nsites,replace=TRUE)]
bs_dna<-replicate(nrep,foo(dna,nsites),simplify=FALSE)
bs_dna
NJ(dist.dna(dna,model="JC69"))
root(NJ(dist.dna(dna,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
foo<-function(X) root(NJ(dist.dna(X,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
foo<-function(X) root(NJ(dist.dna(X,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
rooted.bs_trees<-lapply(bs_dna,foo)
rooted.bs_trees
njBoot<-function(dna,nrep=100,outgroup){
nsites<-ncol(dna)
foo<-function(X,nsites) X[,sample(1:nsites,replace=TRUE)]
bs_dna<-replicate(nrep,foo(dna,nsites),simplify=FALSE)
rooted.nj_tree<-root(NJ(dist.dna(dna,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
foo<-function(X) root(NJ(dist.dna(X,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
rooted.bs_trees<-lapply(bs_dna,foo)
bs<-prop.clades(rooted.nj_tree,rooted.bs_trees)
plotTree(rooted.nj_tree,lwd=1)
nodelabels(bs/100,adj=c(1.2,1.2),cex=0.9,frame="none")
rooted.nj_tree$node.label<-bs/100
return(rooted.nj_tree)
}
rm(list=ls())
ls()
## read data from file
dna<-read.dna(file=
"https://liamrevell.github.io/biol634/data/primates.dna")
## test
rm(list=ls())
XX<-read.dna(file=
"https://liamrevell.github.io/biol634/data/primates.dna")
njBoot(X)->bootstrapped_tree
njBoot<-function(dna,nrep=100,outgroup){
nsites<-ncol(dna)
foo<-function(X,nsites) X[,sample(1:nsites,replace=TRUE)]
bs_dna<-replicate(nrep,foo(dna,nsites),simplify=FALSE)
rooted.nj_tree<-root(NJ(dist.dna(dna,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
foo<-function(X) root(NJ(dist.dna(X,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
rooted.bs_trees<-lapply(bs_dna,foo)
bs<-prop.clades(rooted.nj_tree,rooted.bs_trees)
plotTree(rooted.nj_tree,lwd=1)
nodelabels(bs/100,adj=c(1.2,1.2),cex=0.9,frame="none")
rooted.nj_tree$node.label<-bs/100
return(rooted.nj_tree)
}
njBoot<-function(dna,nrep=100,outgroup){
nsites<-ncol(dna)
foo<-function(X,nsites) X[,sample(1:nsites,replace=TRUE)]
bs_dna<-replicate(nrep,foo(dna,nsites),simplify=FALSE)
rooted.nj_tree<-root(NJ(dist.dna(dna,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
foo<-function(X) root(NJ(dist.dna(X,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
rooted.bs_trees<-lapply(bs_dna,foo)
bs<-prop.clades(rooted.nj_tree,rooted.bs_trees)
plotTree(rooted.nj_tree,lwd=1)
nodelabels(bs/100,adj=c(1.2,1.2),cex=0.9,frame="none")
rooted.nj_tree$node.label<-bs/100
return(rooted.nj_tree)
}
## test
XX<-read.dna(file=
"https://liamrevell.github.io/biol634/data/primates.dna")
njBoot(XX)->bootstrapped_tree
njBoot(XX,outgroup="Lemur")->bootstrapped_tree
dev.off()
njBoot(XX,outgroup="Lemur")->bootstrapped_tree
bootstrapped_tree
YY<-read.nexus.data(
file="https://liamrevell.github.io/biol634/data/Jackman-etal.nex")
YY
YY<-as.DNAbin(YY)
YY
?as.DNAbin
YY<-as.DNAbin(as.matrix(YY))
YY<-read.nexus.data(
file="https://liamrevell.github.io/biol634/data/Jackman-etal.nex")
YY<-as.DNAbin(as.matrix(YY))
YY
as.matrix(YY)
YY<-read.phyDat(
file="https://liamrevell.github.io/biol634/data/Jackman-etal.nex",
format="nexus")
YY<-as.DNAbin(YY)
YY
njBoot(YY)
njBoot(YY,outroup="Diplolaemus_darwinii")
njBoot(YY,outgroup="Diplolaemus_darwinii")
## clean up our workspace
rm(list=ls())
## load packages
library(phytools)
library(phangorn)
## read data from file
dna<-read.dna(file=
"https://liamrevell.github.io/biol634/data/primates.dna")
## get NJ from this dataset
nj_tree<-NJ(dist.dna(dna,model="JC69"))
plot(nj_tree,type="unrooted")
## step 1: bootstrap the data 100 times
nrep<-100 ## this is my number of replicates
nsites<-ncol(dna) ## this is the number of sites in my alignment
bs_dna<-vector(mode="list",length=nrep)
for(i in 1:nrep)
bs_dna[[i]]<-dna[,sample(1:nsites,replace=TRUE)]
## inspect our object to make sure we're doing things correctly
## (this will mainly tell us if we have done things incorrectly)
length(bs_dna)
head(bs_dna)
## step 2: compute NJ tree on all 100 alignments
bs_trees<-vector(mode="list",length=nrep)
for(i in 1:nrep){
D<-dist.dna(bs_dna[[i]],model="JC69")
bs_trees[[i]]<-NJ(D)
}
## step 3 (optional): root all trees
## we can compute bootstrap proportions for unrooted trees, but
## rooting makes it more intuitive
outgroup<-"Lemur"
rooted.nj_tree<-root(nj_tree,outgroup=outgroup,
resolve.root=TRUE)
plotTree(rooted.nj_tree)
## optional: root all the trees in our list using lapply
rooted.bs_trees<-lapply(bs_trees,FUN=root,
outgroup=outgroup,resolve.root=TRUE)
par(mfrow=c(10,10))
lapply(rooted.bs_trees,plotTree,fsize=0.5,lwd=1)
class(rooted.bs_trees)<-"multiPhylo" ## assign class attribute
rooted.bs_trees
## optional: root all trees using root (which is vectorized)
class(bs_trees)<-"multiPhylo"
rooted.bs_trees<-root(bs_trees,outgroup=outgroup,
resolve.root=TRUE)
rooted.bs_trees
## try to plot all our BS trees in a grid
dev.off()
par(mfrow=c(10,10))
plotTree(rooted.bs_trees,fsize=0.6,lwd=1)
## step4 (optional): use ape::prop.clades to compute BS %
bs<-prop.clades(rooted.nj_tree,rooted.bs_trees,
rooted=TRUE)
bs
dev.off() ## reset plotting device
## plot our bootstrap percent
plotTree(rooted.nj_tree)
nodelabels(bs)
## let's make it look a little nicer
plotTree(rooted.nj_tree)
nodelabels(bs/100,adj=c(1.2,1.2),cex=0.9,frame="none")
## we could've skipped all this....
plotBS(rooted.nj_tree,rooted.bs_trees)
## clean up our workspace
rm(list=ls())
## let's make a function for all this
njBoot<-function(dna,nrep=100,outgroup){
nsites<-ncol(dna)
foo<-function(X,nsites) X[,sample(1:nsites,replace=TRUE)]
bs_dna<-replicate(nrep,foo(dna,nsites),simplify=FALSE)
rooted.nj_tree<-root(NJ(dist.dna(dna,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
foo<-function(X) root(NJ(dist.dna(X,model="JC69")),
outgroup=outgroup,resolve.root=TRUE)
rooted.bs_trees<-lapply(bs_dna,foo)
bs<-prop.clades(rooted.nj_tree,rooted.bs_trees)
plotTree(rooted.nj_tree,lwd=1)
nodelabels(bs/100,adj=c(1.2,1.2),cex=0.9,frame="none")
rooted.nj_tree$node.label<-bs/100
return(rooted.nj_tree)
}
## we can run a test on our original dataset
XX<-read.dna(file=
"https://liamrevell.github.io/biol634/data/primates.dna")
njBoot(XX,outgroup="Lemur")->bootstrapped_tree
## now let's do it with the Jackman et al. data
## (we read it in using phangorn::read.phyDat to more easily convert
## to "DNAbin" in matrix)
YY<-read.phyDat(
file="https://liamrevell.github.io/biol634/data/Jackman-etal.nex",
format="nexus")
YY<-as.DNAbin(YY)
njBoot(YY,outgroup="Diplolaemus_darwinii")
getwd()
setwd("courses/BIOL634-fall2025/biol634/")
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,5000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,5000),c(0.08,0.035),lwd=4,col=palette()[4])
lines(c(0,5000),c(0.02,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.03,"instantaneous death rate (d)",srt=13)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,5000),c(0.08,0.035),lwd=4,col=palette()[4])
lines(c(0,5000),c(0.02,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.03,"instantaneous death rate (d)",srt=13)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.035),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.02,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.03,"instantaneous death rate (d)",srt=13)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.02),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.02,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.03,"instantaneous death rate (d)",srt=13)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.02),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.03,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.03,"instantaneous death rate (d)",srt=13)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.02),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.03,"instantaneous death rate (d)",srt=13)
text(1000,0.04,"instantaneous death rate (d)",srt=13)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.02),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.04,"instantaneous death rate (d)",srt=10)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.04,"instantaneous death rate (d)",srt=10)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.07),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.04,"instantaneous death rate (d)",srt=10)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.04,"instantaneous death rate (d)",srt=10)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.04,"instantaneous death rate (d)",srt=8)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.075,"instantaneous birth rate (b)",srt=-18)
text(1000,0.04,"instantaneous death rate (d)",srt=5)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.06,"instantaneous birth rate (b)",srt=-25)
text(1000,0.04,"instantaneous death rate (d)",srt=5)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.065,"instantaneous birth rate (b)",srt=-25)
text(1000,0.04,"instantaneous death rate (d)",srt=5)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.067,"instantaneous birth rate (b)",srt=-26)
text(1000,0.04,"instantaneous death rate (d)",srt=5)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2])
text(1000,0.066,"instantaneous birth rate (b)",srt=-26)
text(1000,0.04,"instantaneous death rate (d)",srt=5)
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2],type="dotted")
par(mar=c(4.1,5.1,1.1,5.1))
plot(NA,xlim=c(0,4000),ylim=c(0.01,0.09),bty="n",las=1,
xlab="Population size (N)",
ylab="birth rate (b)")
axis(4,las=1)
mtext("death rate (d)",side=4,line=2.5)
grid()
lines(c(0,4000),c(0.08,0.01),lwd=4,col=palette()[4])
lines(c(0,4000),c(0.04,0.05),lwd=4,col=palette()[2],lty="dotted")
text(1000,0.066,"instantaneous birth rate (b)",srt=-26)
text(1000,0.04,"instantaneous death rate (d)",srt=5)
layout(matrix(c(1,1,2,2,4,3,3,4),2,4,byrow=TRUE))
N0<-10
t<-0:10
Nt_flies<-setNames(round(N0*2.2^t,1),t)
plot(t,Nt_flies,type="s")
title(main="Spotted lanternflies")
N0<-100000
t<-0:100
r<--0.1
Nt_toads<-setNames(round(N0*exp(r*t),1),t+1923)
plot(t+1923,Nt_toads,type="l")
title("Cane toads")
N0<-1
t<-seq(0,10,length.out=11)
r<-0.7
Nt_dandelions<-setNames(round(N0*exp(r*t),1),t)
plot(t,Nt_dandelions,type="l")
title("Dandelions")
dev.off()
Nt<-N0*exp(r*t)
plot(t,Nt)
t
10*exp(0.46*10)
r
r<-0.3
N0<-10
t<-0:10
Nt<-N0*exp(r*t)
plot(t,Nt)
r<-0.3
N0<-10
t<-0:20
Nt<-N0*exp(r*t)
plot(t,Nt)
abline(h=4000)
log(4000/10)/20)
log(4000/10)/20
plot(t,Nt,type="b",las=1)
plot(t,Nt,type="b",las=1,bty="n")
grid()
plot(t,Nt,type="b",las=1,bty="n",pch=16)
plot(t,Nt,type="b",las=1,bty="n",pch=16,cex.axis=0.7)
r<-0.3
N0<-10
t<-0:20
Nt<-N0*exp(r*t)
plot(t,Nt,type="b",las=1,bty="n",pch=16,cex.axis=0.8)
grid()
plot(t,Nt,type="b",las=1,bty="n",pch=16,cex.axis=0.8,
xlab="number of fruit flies",ylab="time (days)")
grid()
plot(t,Nt,type="b",las=1,bty="n",pch=16,cex.axis=0.8,
xlab="number of fruit flies",ylab="time (days)",
mar=c(5.1,4.1,1.1,1.1))
grid()
r<-0.3
N0<-10
t<-0:20
Nt<-N0*exp(r*t)
par(mar=c(5.1,4.1,1.1,1.1))
plot(t,Nt,type="b",las=1,bty="n",pch=16,cex.axis=0.8,
xlab="number of fruit flies",ylab="time (days)")
grid()
plot(t,Nt,type="b",las=1,bty="n",pch=16,cex.axis=0.8,
ylab="number of fruit flies",xlab="time (days)")
grid()
log(2)/0.3
log(2)/0.1
122*108/47
122*47/108
108*47/122
122*122/108
122*122/47
log(2)/log(1.2)
200*1.2^40
t<-124
N0<-100000
Nt<-9000
log(N0/Nt)/124
log(Nt/N0)/124
log(Nt/N0)/124->r
Nt<-1000
t<-log(Nt/N0)/r
t
t<-log(Nt/N0)/r+1900
t
