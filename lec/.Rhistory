AIC(fit_wbm,fit_bbm,fit_bm)
library(phytools)
N<-50
sig2<-0.5
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=0.4)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2)
fit_bbm
fit_bm<-bounded_bm(tree,x,
lims=phytools:::expand.range(x,p=3),
df=2)
fit_bm
AIC(fit_wbm,fit_bbm,fit_bm)
library(phytools)
N<-50
sig2<-0.1
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=0.4)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2)
fit_bbm
fit_bm<-bounded_bm(tree,x,
lims=phytools:::expand.range(x,p=3),
df=2)
fit_bm
AIC(fit_wbm,fit_bbm,fit_bm)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE,levs=100)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2,levs=100)
fit_bbm
fit_bm<-bounded_bm(tree,x,
lims=phytools:::expand.range(x,p=3),
df=2,levs=300)
geiger::fitContinuous(tree,x)
fit_bm
library(phytools)
N<-50
sig2<-0.1
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=0.4)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE,levs=100)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2,levs=100)
fit_bbm
fit_bm<-bounded_bm(tree,x,
lims=phytools:::expand.range(x,p=3),
df=2,levs=300)
fit_bm
geiger::fitContinuous(tree,x)
AIC(fit_wbm,fit_bbm,fit_bm)
args(runif)
library(phytools)
N<-50
sig2<-runif(n=1,0,5)
sig2
a<-runif(n=1,0,1)
a
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=a)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE,levs=100)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2,levs=100)
fit_bbm
fit_bm<-bounded_bm(tree,x,
lims=phytools:::expand.range(x,p=3),
df=2,levs=300)
fit_bm
geiger::fitContinuous(tree,x)
AIC(fit_wbm,fit_bbm,fit_bm)
library(phytools)
N<-200
sig2<-runif(n=1,0,5)
sig2
a<-runif(n=1,0,1)
a
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=a)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE,levs=100)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2,levs=100)
fit_bbm
fit_bm<-bounded_bm(tree,x,
lims=phytools:::expand.range(x,p=3),
df=2,levs=300)
fit_bm
geiger::fitContinuous(tree,x)
AIC(fit_wbm,fit_bbm,fit_bm)
library(phytools)
N<-200
sig2<-runif(n=1,0,5)
sig2
a<-runif(n=1,0,1)
a
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=a)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE,levs=100)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2,levs=100)
fit_bbm
fit_bm<-bounded_bm(tree,x,
lims=phytools:::expand.range(x,p=3),
df=2,levs=300)
library(phytools)
N<-400
sig2<-runif(n=1,0,5)
sig2
a<-runif(n=1,0,1)
a
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=a)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE,levs=100)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2,levs=100)
fit_bbm
fit_bm<-bounded_bm(tree,x,
lims=phytools:::expand.range(x,p=3),
df=2,levs=300)
fit_bm
geiger::fitContinuous(tree,x)
AIC(fit_wbm,fit_bbm,fit_bm)
library(phytools)
N<-400
sig2<-runif(n=1,0,5)
sig2
a<-runif(n=1,0,1)
a
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=a)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE,levs=100)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2,levs=100)
fit_bbm
fit_bm<-bounded_bm(tree,x,
lims=phytools:::expand.range(x,p=3),
df=2,levs=300)
AIC(fit_wbm,fit_bbm,geiger::fitContinuous(tree,x))
library(phytools)
N<-1000
sig2<-runif(n=1,0,5)
sig2
a<-runif(n=1,0,1)
a
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=a)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE,levs=100)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2,levs=100)
fit_bbm
#fit_bm<-bounded_bm(tree,x,
#  lims=phytools:::expand.range(x,p=3),
#  df=2,levs=300)
#fit_bm
geiger::fitContinuous(tree,x)
AIC(fit_wbm,fit_bbm,geiger::fitContinuous(tree,x))
fit_wbm
sig2
a
fit_bbm
fit_bm
library(phytools)
N<-1000
sig2<-runif(n=1,0,5)
sig2
a<-runif(n=1,0,1)
a
tree<-pbtree(n=N)
x_bm<-fastBM(tree,sig2=sig2,a=a)
hist(x_bm)
foo<-function(x){
if(x>1) return(x-floor(x))
if(x<0) return(1-ceiling(x)+x)
else return(x)
}
x<-sapply(x_bm,foo)
hist(x)
fit_wbm<-bounded_bm(tree,x,lims=c(0,1),wrapped=TRUE,levs=100)
fit_wbm
fit_bbm<-bounded_bm(tree,x,lims=c(0,1),df=2,levs=100)
fit_bbm
#fit_bm<-bounded_bm(tree,x,
#  lims=phytools:::expand.range(x,p=3),
#  df=2,levs=300)
#fit_bm
geiger::fitContinuous(tree,x)
AIC(fit_wbm,fit_bbm,geiger::fitContinuous(tree,x))
remotes::install_github("liamrevell/phytools")
library(phytools)
data("liolaemid.data")
data("liolaemid.tree")
ls()
head(liolaemid.data)
parity<-setNames(liolaemid.data$parity_mode,
rownames(liolaemid.data))
temperature<-setNames(liolaemid.data$temperature,
rownames(liolaemid.data))
?fitcontMk
geiger::name.check(liolaemid.tree,liolaemid.data
)
chk<-geiger::name.check(liolaemid.tree,liolaemid.data)
liolaemid.data<-liolaemid.data[-1,]
head(liolaemid.data)
library(phytools)
data("liolaemid.data")
data("liolaemid.tree")
head(liolaemid.data)
liolaemid.data<-liolaemid.data[-1,]
parity<-setNames(liolaemid.data$parity_mode,
rownames(liolaemid.data))
temperature<-setNames(liolaemid.data$temperature,
rownames(liolaemid.data))
fit<-fitcontMk(liolaemid.tree,parity,temperature,
parallel=TRUE,ncores=10)
plot(fit)
save.image("C:/Users/liamj/Dropbox/presentations/UConn.2025/liolaemid_results.RData")
library(phangorn)
?optim.parsimony
getwd(0)
getwd()
setwd("courses/BIOL634-fall2025/")
setwd("biol634")
getwd()
setwd("lec")
list.files()
library(phytools)
Q<-matrix(c(-0.2,0.2,0.2,-0.2),2,2,
dimnames=list(0:1,0:1))
args(sim.multiMk)
X<-sim.multiMk(tree,Q,nsim=100)
library(phytools)
N<-10
tree<-pbtree(n=N,tip.label=LETTERS[1:N],scale=1)
Q<-matrix(c(-0.2,0.2,0.2,-0.2),2,2,
dimnames=list(0:1,0:1))
X<-sim.multiMk(tree,Q,nsim=100)
tree
X
?sim.Mk
X<-sim.Mk(tree,Q,nsim=100)
X
X[,1]
args(pruning)
args(phytools::pruning)
args(phytools:::pruning)
phytools:::pruning
MODEL
MODEL<-matrix(c(0,1,1,0),2,2)
MODEL
q
Q
q<-sapply(1:max(MODEL),function(i,Q,model) Q[which(model==i,arr.ind=TRUE)],Q=Q,model=MODEL)
q
which(MODEL==i,arr.ind=TRUE)
i<-1
which(MODEL==i,arr.ind=TRUE)
MODEL<-matrix(c(0,1,2,0),2,2)
which(MODEL==i,arr.ind=TRUE)
q<-sapply(1:max(MODEL),function(i,Q,model) Q[which(model==i,arr.ind=TRUE)[1,]],Q=Q,model=MODEL)
q
model<-MODEL
model
q<-sapply(1:max(model),function(i,Q,model)
Q[which(model==i,arr.ind=TRUE)[1,]],
Q=Q,model=model)
q
q<-sapply(1:max(model),function(i,Q,model)
Q[which(model==i,arr.ind=FALSE)[1]],
Q=Q,model=model)
q
MODEL<-matrix(c(0,1,1,0),2,2)
model<-MODEL
lnprob<-0
pw<-reorder(tree,"postorder")
q<-sapply(1:max(model),function(i,Q,model)
Q[which(model==i,arr.ind=FALSE)[1]],
Q=Q,model=model)
args(phytools:::pruning)
for(i in 1:ncol(X)){
lnprob<-lnprob+
phytools:::pruning(q,pw,setNames(X[,i],rownames(X)),
model=model)
}
for(i in 1:ncol(X)){
lnprob<-lnprob+
phytools:::pruning(Q,pw,setNames(X[,i],rownames(X)),
model=model)
}
q
lnprob<-0
pw<-reorder(tree,"postorder")
q<-sapply(1:max(model),function(i,Q,model)
Q[which(model==i,arr.ind=FALSE)[1]],
Q=Q,model=model)
i<-1
setNames(X[,i],rownames(X))
model
lnprob<-lnprob+
phytools:::pruning(q,pw,setNames(X[,i],rownames(X)),
model="ER")
model
phytools:::pruning
pw
k<-2
Q <- matrix(0, k, k)
Q[] <- c(0, q)[model + 1]
diag(Q) <- -rowSums(Q)
Q
levels(X)
levels(X[i,])
levels(X[,i])
X
levels(X[,92])
for(i in 1:ncol(X)){
lnprob<-lnprob+
phytools:::pruning(q,pw,
to.matrix(setNames(X[,i],rownames(X)),0:1),
model=model)
}
lnprob
Q<-matrix(c(-1,1,1,-1),2,2)
Model<-matrix(c(0,1,1,0),2,2)
lik<-lnprob(X,starting_tree,Q,model=Model)
lnprob<-function(X,tree,Q,model){
lnprob<-0
pw<-reorder(tree,"postorder")
q<-sapply(1:max(model),function(i,Q,model)
Q[which(model==i,arr.ind=FALSE)[1]],
Q=Q,model=model)
for(i in 1:ncol(X)){
lnprob<-lnprob+
phytools:::pruning(q,pw,
to.matrix(setNames(X[,i],rownames(X)),0:1),
model=model)
}
return(lnprob)
}
lik<-lnprob(X,starting_tree,Q,model=Model)
starting_tree<-rtree(n=N,tip.label=tree$tip.label)
Q<-matrix(c(-1,1,1,-1),2,2)
Model<-matrix(c(0,1,1,0),2,2)
lik<-lnprob(X,starting_tree,Q,model=Model)
lik
(likp-lik)>tol
likp<-lnprob(X,starting_tree,Q,model=Model)
lik<--Inf
likp-lik)>tol
(likp-lik)>tol
tol=1e-6
(likp-lik)>tol
likp-lik
args(optim)
library(phytools)
N<-10
tree<-pbtree(n=N,tip.label=LETTERS[1:N],scale=1)
Q<-matrix(c(-0.2,0.2,0.2,-0.2),2,2,
dimnames=list(0:1,0:1))
X<-sim.Mk(tree,Q,nsim=100)
X[,1]
MODEL<-matrix(c(0,1,1,0),2,2)
lnprob<-function(X,tree,Q,model){
lnprob<-0
pw<-reorder(tree,"postorder")
q<-sapply(1:max(model),function(i,Q,model)
Q[which(model==i,arr.ind=FALSE)[1]],
Q=Q,model=model)
for(i in 1:ncol(X)){
lnprob<-lnprob+
phytools:::pruning(q,pw,
to.matrix(setNames(X[,i],rownames(X)),0:1),
model=model)
}
return(-lnprob)
}
opt_edge.length<-function(X,tree,Q,model){
foo<-function(edge.length,X,tree,Q,model){
tree$edge.length<-edge.length
-lnprob(X,tree,Q,model)
}
fit<-optim(tree$edge.length,foo,
tree=tree,Q=Q,model=model,
method="L-BFGS-B",lower=0,upper=Inf)
return(fit)
}
starting_tree<-rtree(n=N,tip.label=tree$tip.label)
Q<-matrix(c(-1,1,1,-1),2,2)
Model<-matrix(c(0,1,1,0),2,2)
lik<--Inf
fit<-opt_edge.length(X,starting_tree,Q,model)
X
opt_edge.length<-function(X,tree,Q,model){
foo<-function(edge.length,X,tree,Q,model){
tree$edge.length<-edge.length
-lnprob(X,tree,Q,model)
}
fit<-optim(tree$edge.length,foo,
X=X,tree=tree,Q=Q,model=model,
method="L-BFGS-B",lower=0,upper=Inf)
return(fit)
}
fit<-opt_edge.length(X,starting_tree,Q,model)
opt_edge.length<-function(X,tree,Q,model){
foo<-function(edge.length,X,tree,Q,model){
tree$edge.length<-edge.length
lik<-lnprob(X,tree,Q,model)
-lik
}
fit<-optim(tree$edge.length,foo,
X=X,tree=tree,Q=Q,model=model,
method="L-BFGS-B",lower=0,upper=Inf)
return(fit)
}
fit<-opt_edge.length(X,starting_tree,Q,model)
opt_edge.length<-function(X,tree,Q,model){
foo<-function(edge.length,X,tree,Q,model){
tree$edge.length<-edge.length
lik<-lnprob(X,tree,Q,model)
print(lik)
-lik
}
fit<-optim(tree$edge.length,foo,
X=X,tree=tree,Q=Q,model=model,
method="L-BFGS-B",lower=0,upper=Inf)
return(fit)
}
fit<-opt_edge.length(X,starting_tree,Q,model)
opt_edge.length<-function(X,tree,Q,model){
foo<-function(edge.length,X,tree,Q,model){
tree$edge.length<-edge.length
lik<-lnprob(X,tree,Q,model)
print(-lik)
lik
}
fit<-optim(tree$edge.length,foo,
X=X,tree=tree,Q=Q,model=model,
method="L-BFGS-B",lower=0,upper=Inf)
return(fit)
}
fit<-opt_edge.length(X,starting_tree,Q,model)
